# 17. You and your friend are in a team to write a two-player game, human against computer, such as Tic-Tac-Toe / Noughts and Crosses. Your friend will write the logic to play one round of the game, while you will write the logic to allow many rounds of play, keep score, decide who plays, first, etc. The two of you negotiate on how the two parts of the program will fit together, and you come up with this simple scaffolding (which your friend will improve later):

# a. Write the main program which repeatedly calls this function to play the game, and after each round it announces the outcome as “I win!”, “You win!”, or “Game drawn!”. It then asks the player “Do you want to play again?” and either plays again, or says “Goodbye”, and terminates.

# Your friend will complete this function

def play_once(human_plays_first):
    """
       Must play one round of the game. If the parameter
       is True, the human gets to play first, else the
       computer gets to play first.  When the round ends,
       the return value of the function is one of
       -1 (human wins),  0 (game drawn),   1 (computer wins).
    """
    # This is all dummy scaffolding code right at the moment...
    import random                  # See Modules chapter ...
    rng = random.Random()
    # Pick a random result between -1 and 1.
    result = rng.randrange(-1,2)
    print("Human plays first={0},  winner={1} "
                       .format(human_plays_first, result))
    return result

def start(play):
    if play %2 == 0:
        return True
    else:
        return False

def scoree(result,comp,hum,play):
    if result == 1:
        print("I win!")
        comp.append(1)
    elif result == 0:
        print("Game drawn!")
        tie.append(1)
    elif result == -1:
        print("You win!")
        hum.append(1)
    play += 1
    print(hum)
    print(comp)
    per = (len(hum)/(len(hum)+len(comp)+len(tie)))*100
    print("Percentage of human wins: " +str(per)+"%")
    print("")

play = 0
hum = []
tie = []
comp = []
while True:
    scoree(play_once(start(play)),comp,hum,play)
    again = str(input("Do you want to play again? "))
    if str.lower(again) in ["yes", "y"]:
        play += 1
    else:
        print("Goodbye")
        break
